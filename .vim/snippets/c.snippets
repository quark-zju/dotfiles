snippet def "#define ..." !b
#define ${1:SYMBOL} ${2:value}
endsnippet

snippet idef "#ifndef ... #define ... #endif" !b
#ifndef ${1/([A-Za-z0-9_]+).*/$1/}
# define ${1:SYMBOL} ${2:value}
#endif
endsnippet

snippet inc "#include <> (Inc)" !b
#include <${1:stdio.h}>
endsnippet

snippet Inc "#include local header (inc)" !b
#include "${1:`!p snip.rv = snip.basename + '.h'`}"
endsnippet

snippet main "main() (main)" !b
int main(int argc, char const *argv[]) {
	${0:/* code */}
	return 0;
}
endsnippet

snippet for "for int loop (fori)" !
for (int ${2:i} = `!p snip.rv = '0' if t[2] != 'j' else 'i + 1'`; $2 <`!p snip.rv = ' ' if t[1].find('size()') < 0 else ' (int)'`${1:n}; ++$2) {
	${3}
}${0}
endsnippet

snippet if "if .. (if)" !
if (${1:/* condition */}) {
	${2:/* code */}
}${0}
endsnippet

snippet el "else" !
else {
    ${1}
}${0}
endsnippet

snippet pr "printf .. (printf)" !
printf("${1:%s}\n"${1/([^%]|%%)*(%.)?.*/(?2:, :\);)/}$2${1/([^%]|%%)*(%.)?.*/(?2:\);)/}
endsnippet

snippet fpr "fprintf ..." !
fprintf(${1:stderr}, "${2:%s}\n"${2/([^%]|%%)*(%.)?.*/(?2:, :\);)/}$3${2/([^%]|%%)*(%.)?.*/(?2:\);)/}
endsnippet

snippet sc "scanf .. " !
scanf("${1:%d}", ${2:&n})${3}
endsnippet

snippet ms "memset" !
memset(${1:a}, ${2:0}, sizeof($1));
endsnippet

