extends c

snippet cl "class .. (class)" !b
class ${1:`!p snip.rv = snip.basename or "name"`} {
public:
	${1/(\w+).*/$1/} (${2:arguments});
	virtual ~${1/(\w+).*/$1/} ();

private:
	${0}
};
endsnippet

snippet ns "namespace .. (namespace)" !b
namespace${1/.+/ /m}${1:`!p snip.rv = snip.basename or "name"`} {
	$0
}${1/.+/ \/* /m}$1${1/.+/ *\/ /m}
endsnippet

snippet us "using namespace std" !b
using namespace std;
endsnippet

snippet map "std::map (map)" !b
std::map<${1:key}, ${2:value}> ${3:m};$0
endsnippet

snippet vec "std::vector (v)" !b
std::vector<${1:char}> ${3:v};$0
endsnippet

snippet fori "for (iterator)" !b
for (__typeof($1.begin()) ${2:it} = ${1:m}.begin(); $2 != $1.end(); ++$2) {
    ${3}
}${0}
endsnippet

snippet sort "sort(vector)" !b
sort(${1:v}.begin(), $1.end());${0}
endsnippet

snippet sorta "sort(array)" !b
sort(${1:a}, $1 + sizeof($1) / sizeof($1[0]));${0}
endsnippet

snippet nextp "next_permutation(vector)" !
next_permutation(${1:v}.begin(), $1.end());${0}
endsnippet

snippet nextpa "next_permutation(vector)" !
next_permutation(${1:a}, $1 + sizeof($1) / sizeof($1[0]));${0}
endsnippet

